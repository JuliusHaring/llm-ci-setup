name: 'OpenAI Code Gen'
description: 'Generates files using OpenAI API'
inputs:
  descriptions:
    description: 'Descriptions (comma-separated)'
    required: true
  openai_token:
    description: 'OpenAI API Token'
    required: true
  model_name:
    description: 'Model Name'
    required: false
    default: 'gpt-3.5-turbo'
  max_tokens:
    description: 'Maximum tokens for OpenAI API call'
    required: false
    default: '300'
  python_version:
    description: 'Python version'
    required: false
    default: '3.x'
  python_log_level:
    description: 'Log level used in the python script'
    required: true
    default: 'INFO'
  force_push:
    description: 'Enable force push to the remote branch'
    required: false
    default: 'true'
  branch_name:
    description: 'Branch Name'
    required: false
    default: 'llm-code-gen'
  commit_message:
    description: 'Commit Message'
    required: false
    default: 'feat: add llm-generated code'
  pr_base_branch_name:
    description: 'Branch to base the PR on. If empty it will create no PR.'
    required: false
    default: 'main'
  pr_body:
    description: 'Pull request body'
    required: false
    default: 'This PR is auto-generated.'
  pr_title:
    description: 'Pull request title'
    required: false
    default: 'LLM Generated Code'
  dry_run:
    description: 'Execute dry run without pushing or creating a PR'
    required: false
    default: 'false'

runs:
  using: 'composite'
  steps:
  - name: Checkout Code
    uses: actions/checkout@v4

  - name: Set up Python
    uses: actions/setup-python@v4
    with:
      python-version: ${{ inputs.python_version }}

  - name: Install dependencies
    shell: bash
    run: pip install -r requirements.txt

  - name: Generate Files
    shell: bash
    run: |
      python generate_files.py --descriptions '${{ inputs.descriptions }}' --openai_token '${{ inputs.openai_token }}' --model_name '${{ inputs.model_name }}' --max_tokens '${{ inputs.max_tokens }}' --log_level '${{ inputs.python_log_level }}' $FORCE_PUSH_FLAG

  - name: Push to Git
    shell: bash
    if: inputs.dry_run == 'false'
    run: |
      FORCE_PUSH_FLAG=""
      if [ "${{ inputs.force_push }}" = "true" ] {
        FORCE_PUSH_FLAG="--force"
      }
      git config --global user.name "runner"
      git config --global user.email "runner@example.com"
      git checkout -b ${{ inputs.branch_name }}
      git add .
      git commit -m "${{ inputs.commit_message }}"
      git push origin ${{ inputs.branch_name }} $FORCE_PUSH_FLAG

  - name: Create Pull Request
    if: inputs.dry_run == 'false' && inputs.pr_base_branch_name != ''
    uses: actions/github-script@v6
    with:
      script: |
        const { repo, owner } = context.repo;
        const result = await github.rest.pulls.create({
          title: '${{ inputs.pr_title }}',
          owner,
          repo,
          head: '${{ inputs.branch_name }}',
          base: '${{ inputs.pr_base_branch_name }}',
          body: '${{ inputs.pr_body }}'
        });
